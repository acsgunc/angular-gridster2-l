{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","GridType","DisplayGrid","CompactType","DirTypes","scrollSensitivity","scrollSpeed","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","GridsterCompact","gridster","destroy","checkCompact","$options","compactType","None","CompactUp","checkCompactUp","CompactLeft","checkCompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","checkCompactRight","CompactUpAndRight","CompactRightAndUp","checkCompactItem","item","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","y","itemChanged","checkCollision","x","GridsterComponentInterface","Injectable","GridsterConfigService","gridType","Fit","scale","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","mobileBreakpoint","allowMultiLayer","defaultLayerIndex","maxLayerIndex","baseLayerIndex","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","OnDragAndResize","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","dirType","LTR","GridsterUtils","merge","obj1","obj2","properties","GridsterUtils_1","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkDragHandleClass","currentTarget","checkContentClass","checkContentClassForEmptyCellClickEvent","current","hasAttribute","classnames","getAttribute","split","indexOf","parentNode","contentClass","compareItems","a","b","GridsterEmptyCell","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","gridRenderer","getLeftMargin","scrollTop","top","getTopMargin","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","dPosition","RTL","transform","xPosition","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","checkCollisionTwoItems","item2","layerIndex","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","GridsterComponent_1","getNewArrayLength","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","overallSize","size","newLength","Number","isFinite","ElementRef","type","Inject","Renderer2","ChangeDetectorRef","NgZone","Input","Component","selector","template","encapsulation","ViewEncapsulation","GridsterPush","gridsterItem","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkItemChanges","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","canBeDragged","find","lastIndexOf","j","pop","removeFromPushedItem","gridsterItemCollide","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterItemComponentInterface","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterSwap","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","pushedBy","gridsterItemCollision","copyCollisionX","copyCollisionY","copyX","copyY","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","originalClientX","originalClientY","diffLeft","diffTop","calculateItemPositionFromMousePosition","calculateItemPositionWithScale","calculateItemPositionWithoutScale","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleE","handleW","handleS","handleNE","handleNW","handleSE","handleSW","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","getLayerIndex","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","bringToFront","offset","topIndex","targetIndex","sendToBack","HostBinding","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport enum DirTypes {\n  LTR = 'ltr',\n  RTL = 'rtl'\n}\n\nexport type dirTypes = 'ltr' | 'rtl';\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  scale?: number;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  allowMultiLayer?: boolean;\n  defaultLayerIndex?: number;\n  maxLayerIndex?: number;\n  baseLayerIndex?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  dirType?: dirTypes;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  checkCollisionTwoItems: (item: GridsterItem, item2: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {CompactType, DirTypes, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  scale: 1, // scale param to zoom in/zoom out\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  allowMultiLayer: false,\n  defaultLayerIndex: 0,\n  maxLayerIndex: 2,\n  baseLayerIndex: 1,\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false,  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR, // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkDragHandleClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkDragHandleClass(target: any, current: any, dragHandleClass: string, ignoreContentClass): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') ) {\n      const classnames = target.getAttribute('class').split(' ');\n      if (classnames.indexOf(dragHandleClass) > -1) {\n        return true;\n      }\n      if (classnames.indexOf(ignoreContentClass) > -1) {\n        return false;\n      }\n    }\n    return GridsterUtils.checkDragHandleClass(target.parentNode, current, dragHandleClass, ignoreContentClass);\n  }\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes, GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.curWidth / item.cols) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): { left?: string, transform?: string } {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + dPosition) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): { top?: string, transform?: string } {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterCompact} from './gridsterCompact.service';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2,\n              @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef,\n              @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    const collision = item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n    if (!collision) {\n      return false;\n    }\n    if (!this.$options.allowMultiLayer) {\n      return true;\n    }\n    const defaultLayerIndex = this.$options.defaultLayerIndex;\n    const layerIndex = item.layerIndex === undefined ? defaultLayerIndex : item.layerIndex;\n    const layerIndex2 = item2.layerIndex === undefined ? defaultLayerIndex : item2.layerIndex;\n    return layerIndex === layerIndex2;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0;\n    let colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries.\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n  // tslint:disable-next-line:member-ordering\n  private static getNewArrayLength(length: number, overallSize: number, size: number): number {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n\n    if (newLength < 0) {\n      return 0;\n    }\n\n    if (Number.isFinite(newLength)) {\n      return Math.floor(newLength);\n    }\n\n    return 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  bringToFront: (offset: number) => void;\n  sendToBack: (v: number) => void ;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  originalClientX: number;\n  originalClientY: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  mousedown: () => void;\n  touchstart: () => void;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = (e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left);\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    if (this.gridster.options.scale) {\n      this.calculateItemPositionWithScale(e, this.gridster.options.scale);\n    } else {\n      this.calculateItemPositionWithoutScale(e);\n    }\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  calculateItemPositionWithScale(e: any, scale: number): void {\n    this.left = this.originalClientX + ((e.clientX - this.originalClientX) / scale) + this.offsetLeft - this.diffLeft;\n    this.top = this.originalClientY + ((e.clientY - this.originalClientY) / scale)  + this.offsetTop - this.diffTop;\n  }\n\n  calculateItemPositionWithoutScale(e: any): void {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: (e: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      } else {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      } else {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      }\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation,\n  Inject,\n  HostBinding\n} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  @HostBinding('style.z-index')\n  get zIndex(): number {\n    return this.getLayerIndex() + this.gridster.$options.baseLayerIndex;\n  }\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      layerIndex: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n  bringToFront(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    const topIndex = this.gridster.$options.maxLayerIndex;\n    if (layerIndex < topIndex) {\n      const targetIndex = offset ? layerIndex + offset : topIndex;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex > topIndex ? topIndex : targetIndex;\n    }\n  }\n  sendToBack(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    if (layerIndex > 0) {\n      const targetIndex = offset ? layerIndex - offset : 0;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex < 0 ? 0 : targetIndex;\n    }\n  }\n\n  private getLayerIndex(): number {\n    if (this.item.layerIndex !== undefined) {\n      return this.item.layerIndex;\n    }\n    if (this.gridster.$options.defaultLayerIndex !== undefined) {\n      return this.gridster.$options.defaultLayerIndex;\n    }\n    return 0;\n  }\n\n}\n","import {Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}