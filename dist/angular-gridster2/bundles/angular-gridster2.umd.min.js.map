{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","GridType","DisplayGrid","CompactType","DirTypes","scrollSensitivity","scrollSpeed","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","GridsterCompact","gridster","destroy","checkCompact","$options","compactType","None","CompactUp","checkCompactUp","CompactLeft","checkCompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","checkCompactRight","CompactUpAndRight","CompactRightAndUp","checkCompactItem","item","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","y","itemChanged","checkCollision","x","GridsterComponentInterface","Injectable","GridsterConfigService","gridType","Fit","scale","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","mobileBreakpoint","allowMultiLayer","defaultLayerIndex","maxLayerIndex","baseLayerIndex","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","OnDragAndResize","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","dirType","LTR","GridsterUtils","merge","obj1","obj2","properties","GridsterUtils_1","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkDragHandleClass","currentTarget","checkContentClass","checkContentClassForEmptyCellClickEvent","current","hasAttribute","classnames","getAttribute","split","indexOf","parentNode","contentClass","compareItems","a","b","GridsterEmptyCell","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","getPixelsX","rect","scrollLeft","left","gridRenderer","getLeftMargin","getPixelsY","scrollTop","top","getTopMargin","oldItem","getBoundingClientRect","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","dPosition","RTL","transform","xPosition","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","checkCollisionTwoItems","item2","layerIndex","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","GridsterComponent_1","getNewArrayLength","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","overallSize","size","newLength","Number","isFinite","ElementRef","type","Inject","Renderer2","ChangeDetectorRef","NgZone","tslib_1.__decorate","Input","Component","selector","template","encapsulation","ViewEncapsulation","tslib_1.__param","GridsterPush","gridsterItem","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkItemChanges","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","canBeDragged","find","lastIndexOf","j","pop","removeFromPushedItem","gridsterItemCollide","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterItemComponentInterface","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterSwap","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","pushedBy","gridsterItemCollision","copyCollisionX","copyCollisionY","copyX","copyY","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","originalClientX","originalClientY","diffLeft","diffTop","calculateItemPositionFromMousePosition","calculateItemPositionWithScale","calculateItemPositionWithoutScale","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleE","handleW","handleS","handleNE","handleNW","handleSE","handleSW","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","getLayerIndex","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","bringToFront","offset","topIndex","targetIndex","sendToBack","HostBinding","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport enum DirTypes {\n  LTR = 'ltr',\n  RTL = 'rtl'\n}\n\nexport type dirTypes = 'ltr' | 'rtl';\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  scale?: number;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  allowMultiLayer?: boolean;\n  defaultLayerIndex?: number;\n  maxLayerIndex?: number;\n  baseLayerIndex?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  dirType?: dirTypes;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  checkCollisionTwoItems: (item: GridsterItem, item2: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {CompactType, DirTypes, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  scale: 1, // scale param to zoom in/zoom out\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  allowMultiLayer: false,\n  defaultLayerIndex: 0,\n  maxLayerIndex: 2,\n  baseLayerIndex: 1,\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false,  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR, // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkDragHandleClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkDragHandleClass(target: any, current: any, dragHandleClass: string, ignoreContentClass): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') ) {\n      const classnames = target.getAttribute('class').split(' ');\n      if (classnames.indexOf(dragHandleClass) > -1) {\n        return true;\n      }\n      if (classnames.indexOf(ignoreContentClass) > -1) {\n        return false;\n      }\n    }\n    return GridsterUtils.checkDragHandleClass(target.parentNode, current, dragHandleClass, ignoreContentClass);\n  }\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getPixelsX(e: any, rect: ClientRect): number {\n    const scale = this.gridster.$options.scale;\n    if (scale) {\n      return (e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin()) / scale;\n    }\n    return e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n  }\n\n  getPixelsY(e: any, rect: ClientRect): number {\n    const scale = this.gridster.$options.scale;\n    if (scale) {\n      return (e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin()) / scale;\n    }\n    return e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = this.getPixelsX(e, rect);\n    const y = this.getPixelsY(e, rect);\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes, GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.curWidth / item.cols) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): { left?: string, transform?: string } {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + dPosition) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): { top?: string, transform?: string } {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterCompact} from './gridsterCompact.service';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2,\n              @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef,\n              @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    const collision = item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n    if (!collision) {\n      return false;\n    }\n    if (!this.$options.allowMultiLayer) {\n      return true;\n    }\n    const defaultLayerIndex = this.$options.defaultLayerIndex;\n    const layerIndex = item.layerIndex === undefined ? defaultLayerIndex : item.layerIndex;\n    const layerIndex2 = item2.layerIndex === undefined ? defaultLayerIndex : item2.layerIndex;\n    return layerIndex === layerIndex2;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0;\n    let colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries.\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n  // tslint:disable-next-line:member-ordering\n  private static getNewArrayLength(length: number, overallSize: number, size: number): number {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n\n    if (newLength < 0) {\n      return 0;\n    }\n\n    if (Number.isFinite(newLength)) {\n      return Math.floor(newLength);\n    }\n\n    return 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  bringToFront: (offset: number) => void;\n  sendToBack: (v: number) => void ;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  originalClientX: number;\n  originalClientY: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  mousedown: () => void;\n  touchstart: () => void;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = (e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left);\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    if (this.gridster.options.scale) {\n      this.calculateItemPositionWithScale(e, this.gridster.options.scale);\n    } else {\n      this.calculateItemPositionWithoutScale(e);\n    }\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  calculateItemPositionWithScale(e: any, scale: number): void {\n    this.left = this.originalClientX + ((e.clientX - this.originalClientX) / scale) + this.offsetLeft - this.diffLeft;\n    this.top = this.originalClientY + ((e.clientY - this.originalClientY) / scale)  + this.offsetTop - this.diffTop;\n  }\n\n  calculateItemPositionWithoutScale(e: any): void {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: (e: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      } else {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      } else {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      }\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation,\n  Inject,\n  HostBinding\n} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  @HostBinding('style.z-index')\n  get zIndex(): number {\n    return this.getLayerIndex() + this.gridster.$options.baseLayerIndex;\n  }\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      layerIndex: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n  bringToFront(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    const topIndex = this.gridster.$options.maxLayerIndex;\n    if (layerIndex < topIndex) {\n      const targetIndex = offset ? layerIndex + offset : topIndex;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex > topIndex ? topIndex : targetIndex;\n    }\n  }\n  sendToBack(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    if (layerIndex > 0) {\n      const targetIndex = offset ? layerIndex - offset : 0;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex < 0 ? 0 : targetIndex;\n    }\n  }\n\n  private getLayerIndex(): number {\n    if (this.item.layerIndex !== undefined) {\n      return this.item.layerIndex;\n    }\n    if (this.gridster.$options.defaultLayerIndex !== undefined) {\n      return this.gridster.$options.defaultLayerIndex;\n    }\n    return 0;\n  }\n\n}\n","import {Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}