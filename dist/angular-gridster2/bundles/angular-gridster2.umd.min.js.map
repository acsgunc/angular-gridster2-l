{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.html","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.html","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","GridType","DisplayGrid","CompactType","DirTypes","GridsterCompact","gridster","destroy","checkCompact","$options","compactType","None","CompactUp","checkCompactUp","CompactLeft","checkCompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","checkCompactRight","CompactUpAndRight","CompactRightAndUp","checkCompactItem","item","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","y","itemChanged","checkCollision","x","core","GridsterComponentInterface","factory","ɵfac","GridsterConfigService","gridType","Fit","scale","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","mobileBreakpoint","allowMultiLayer","defaultLayerIndex","maxLayerIndex","baseLayerIndex","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","scrollSensitivity","scrollSpeed","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","OnDragAndResize","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","dirType","LTR","GridsterUtils","merge","obj1","obj2","properties","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkDragHandleClass","target","currentTarget","checkContentClass","checkContentClassForEmptyCellClickEvent","current","hasAttribute","classnames","getAttribute","split","indexOf","parentNode","contentClass","compareItems","a","b","GridsterEmptyCell","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","gridRenderer","getLeftMargin","scrollTop","top","getTopMargin","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","dPosition","RTL","transform","xPosition","i0.ɵɵelement","i0.ɵɵproperty","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","checkCollisionTwoItems","item2","layerIndex","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","getNewArrayLength","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","overallSize","size","newLength","Number","isFinite","ElementRef","Renderer2","ChangeDetectorRef","NgZone","selectors","inputs","features","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","i0.ɵɵprojection","i0.ɵɵadvance","GridsterPush","gridsterItem","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkItemChanges","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","canBeDragged","find","lastIndexOf","j","pop","removeFromPushedItem","gridsterItemCollide","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterItemComponentInterface","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterSwap","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","pushedBy","gridsterItemCollision","copyCollisionX","copyCollisionY","copyX","copyY","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","originalClientX","originalClientY","diffLeft","diffTop","calculateItemPositionFromMousePosition","calculateItemPositionWithScale","calculateItemPositionWithoutScale","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleE","handleW","handleS","handleNE","handleNW","handleSE","handleSW","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","i0.ɵɵelementStart","i0.ɵɵlistener","$event","_r53","i0.ɵɵelementEnd","_r56","_r59","_r62","_r65","_r68","_r71","_r74","GridsterItemComponent","defineProperty","getLayerIndex","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","bringToFront","offset","topIndex","targetIndex","sendToBack","hostVars","hostBindings","GridsterPreviewComponent","styles","encapsulation","GridsterModule","providers","imports","CommonModule","declarations","exports","common","NgClass","NgComponentOutlet","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgPlural","NgPluralCase","AsyncPipe","UpperCasePipe","LowerCasePipe","JsonPipe","SlicePipe","DecimalPipe","PercentPipe","TitleCasePipe","CurrencyPipe","DatePipe","I18nPluralPipe","I18nSelectPipe","KeyValuePipe"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport enum DirTypes {\n  LTR = 'ltr',\n  RTL = 'rtl'\n}\n\nexport type dirTypes = 'ltr' | 'rtl';\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  scale?: number;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  allowMultiLayer?: boolean;\n  defaultLayerIndex?: number;\n  maxLayerIndex?: number;\n  baseLayerIndex?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  dirType?: dirTypes;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  checkCollisionTwoItems: (item: GridsterItem, item2: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {CompactType, DirTypes, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  scale: 1, // scale param to zoom in/zoom out\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  allowMultiLayer: false,\n  defaultLayerIndex: 0,\n  maxLayerIndex: 2,\n  baseLayerIndex: 1,\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false,  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR, // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkDragHandleClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkDragHandleClass(target: any, current: any, dragHandleClass: string, ignoreContentClass): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') ) {\n      const classnames = target.getAttribute('class').split(' ');\n      if (classnames.indexOf(dragHandleClass) > -1) {\n        return true;\n      }\n      if (classnames.indexOf(ignoreContentClass) > -1) {\n        return false;\n      }\n    }\n    return GridsterUtils.checkDragHandleClass(target.parentNode, current, dragHandleClass, ignoreContentClass);\n  }\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes, GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.curWidth / item.cols) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): { left?: string, transform?: string } {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + dPosition) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): { top?: string, transform?: string } {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","<div class=\"gridster-column\" *ngFor=\"let column of gridColumns; let i = index;\"\n     [ngStyle]=\"gridRenderer.getGridColumnStyle(i)\"></div>\n<div class=\"gridster-row\" *ngFor=\"let row of gridRows; let i = index;\"\n     [ngStyle]=\"gridRenderer.getGridRowStyle(i)\"></div>\n<ng-content></ng-content>\n<gridster-preview class=\"gridster-preview\"></gridster-preview>\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterCompact} from './gridsterCompact.service';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2,\n              @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef,\n              @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    const collision = item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n    if (!collision) {\n      return false;\n    }\n    if (!this.$options.allowMultiLayer) {\n      return true;\n    }\n    const defaultLayerIndex = this.$options.defaultLayerIndex;\n    const layerIndex = item.layerIndex === undefined ? defaultLayerIndex : item.layerIndex;\n    const layerIndex2 = item2.layerIndex === undefined ? defaultLayerIndex : item2.layerIndex;\n    return layerIndex === layerIndex2;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && this.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0;\n    let colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries.\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n  // tslint:disable-next-line:member-ordering\n  private static getNewArrayLength(length: number, overallSize: number, size: number): number {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n\n    if (newLength < 0) {\n      return 0;\n    }\n\n    if (Number.isFinite(newLength)) {\n      return Math.floor(newLength);\n    }\n\n    return 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  bringToFront: (offset: number) => void;\n  sendToBack: (v: number) => void ;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  originalClientX: number;\n  originalClientY: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  mousedown: () => void;\n  touchstart: () => void;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = (e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left);\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    if (this.gridster.options.scale) {\n      this.calculateItemPositionWithScale(e, this.gridster.options.scale);\n    } else {\n      this.calculateItemPositionWithoutScale(e);\n    }\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  calculateItemPositionWithScale(e: any, scale: number): void {\n    this.left = this.originalClientX + ((e.clientX - this.originalClientX) / scale) + this.offsetLeft - this.diffLeft;\n    this.top = this.originalClientY + ((e.clientY - this.originalClientY) / scale)  + this.offsetTop - this.diffTop;\n  }\n\n  calculateItemPositionWithoutScale(e: any): void {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!this.gridster.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: (e: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      } else {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      } else {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      }\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","<ng-content></ng-content>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.s && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-s\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.e && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-e\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.n && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-n\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.w && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-w\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.se && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-se\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.ne && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-ne\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.sw && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-sw\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     *ngIf=\"gridster.$options.resizable.handles.nw && resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-nw\"></div>\n","import {\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation,\n  Inject,\n  HostBinding\n} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  @HostBinding('style.z-index')\n  get zIndex(): number {\n    return this.getLayerIndex() + this.gridster.$options.baseLayerIndex;\n  }\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      layerIndex: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n  bringToFront(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    const topIndex = this.gridster.$options.maxLayerIndex;\n    if (layerIndex < topIndex) {\n      const targetIndex = offset ? layerIndex + offset : topIndex;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex > topIndex ? topIndex : targetIndex;\n    }\n  }\n  sendToBack(offset: number): void {\n    if (offset && offset <= 0) {\n      return;\n    }\n    const layerIndex = this.getLayerIndex();\n    if (layerIndex > 0) {\n      const targetIndex = offset ? layerIndex - offset : 0;\n      this.item.layerIndex = this.$item.layerIndex = targetIndex < 0 ? 0 : targetIndex;\n    }\n  }\n\n  private getLayerIndex(): number {\n    if (this.item.layerIndex !== undefined) {\n      return this.item.layerIndex;\n    }\n    if (this.gridster.$options.defaultLayerIndex !== undefined) {\n      return this.gridster.$options.defaultLayerIndex;\n    }\n    return 0;\n  }\n\n}\n","import {Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}